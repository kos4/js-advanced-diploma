(()=>{"use strict";function t(t,e){let s="center";const a=e*e;return t>=0&&t<e?s="top":t>=a-e&&t<a&&(s="bottom"),t%e==0?"center"!==s?s+="-left":s="left":(t+1)%e==0&&("center"!==s?s+="-right":s="right"),s}function e(t,e,s,a=8){let i,r=Math.abs(t-e);const o=t%a,n=Math.abs(Math.floor(t/a)-Math.floor(e/a));return o-e%a==0&&r/a<=s&&(i=r/a),Math.floor(t/a)===Math.floor(e/a)&&r<=s&&(i=r),r===(a-1)*n&&r/(a-1)<=s&&(i=r/(a-1)),r===(a+1)*n&&r/(a+1)<=s&&(i=r/(a+1)),i}function s(t,e){const s=[],a=(t-1)%8+1,i=Math.floor((t-1)/8),r=a-e>=0?a-e:0,o=a+e<8?a+e:7,n=i+e<8?i+e:7;for(let a=i-e>=0?i-e:0;a<=n;a++)for(let e=r;e<=o;e++){let i=8*a+e;i!==t&&s.push(i)}return s}class a{constructor(){this.boardSize=8,this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUi(e){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(t=>this.onNewGameClick(t))),this.saveGameEl.addEventListener("click",(t=>this.onSaveGameClick(t))),this.loadGameEl.addEventListener("click",(t=>this.onLoadGameClick(t))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(e);for(let e=0;e<this.boardSize**2;e+=1){const s=document.createElement("div");s.title=e,s.classList.add("cell","map-tile",`map-tile-${t(e,this.boardSize)}`),s.addEventListener("mouseenter",(t=>this.onCellEnter(t))),s.addEventListener("mouseleave",(t=>this.onCellLeave(t))),s.addEventListener("click",(t=>this.onCellClick(t))),this.boardEl.appendChild(s)}this.cells=Array.from(this.boardEl.children)}redrawPositions(t){for(const t of this.cells)t.innerHTML="";for(const s of t){const t=this.boardEl.children[s.position],a=document.createElement("div");a.classList.add("character",s.character.type);const i=document.createElement("div");i.classList.add("health-level");const r=document.createElement("div");r.classList.add("health-level-indicator","health-level-indicator-"+((e=s.character.health)<15?"critical":e<50?"normal":"high")),r.style.width=`${s.character.health}%`,i.appendChild(r),a.appendChild(i),t.appendChild(a)}var e}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}addNewGameListener(t){this.newGameListeners.push(t)}addSaveGameListener(t){this.saveGameListeners.push(t)}addLoadGameListener(t){this.loadGameListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach((t=>t.call(null,e)))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach((t=>t.call(null,e)))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach((t=>t.call(null,e)))}onNewGameClick(t){t.preventDefault(),this.newGameListeners.forEach((t=>t.call(null)))}onSaveGameClick(t){t.preventDefault(),this.saveGameListeners.forEach((t=>t.call(null)))}onLoadGameClick(t){t.preventDefault(),this.loadGameListeners.forEach((t=>t.call(null)))}static showError(t){alert(t)}static showMessage(t){alert(t)}selectCell(t,e="yellow"){this.deselectCell(t),this.cells[t].classList.add("selected",`selected-${e}`)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter((t=>t.startsWith("selected"))))}showCellTooltip(t,e){this.cells[e].title=t}hideCellTooltip(t){this.cells[t].title=""}showDamage(t,e){return new Promise((s=>{const a=this.cells[t],i=document.createElement("span");i.textContent=e,i.classList.add("damage"),a.appendChild(i),i.addEventListener("animationend",(()=>{a.removeChild(i),s()}))}))}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}const i={prairie:"prairie",desert:"desert",arctic:"arctic",mountain:"mountain",[Symbol.iterator](){return this},next(t=null){null!==t&&(this.current=t),void 0===this.current&&(this.current=-1);const e=Object.values(this);return this.current+=1,this.current===e.length-2&&(this.current=0),{done:!1,value:e[this.current]}}};class r{constructor(t,e="generic"){if(this.level=t,this.attack=0,this.defence=0,this.health=50,this.type=e,"Character"===new.target.name||"s"===new.target.name)throw new Error("This is a base character class, to create a character use the appropriate class.")}}class o extends r{constructor(t){super(t,"bowman"),this.attack=25,this.defence=25,this.distance=2,this.distanceAttack=2}}class n extends r{constructor(t){super(t,"swordsman"),this.attack=40,this.defence=10,this.distance=4,this.distanceAttack=1}}class h extends r{constructor(t){super(t,"magician"),this.attack=10,this.defence=40,this.distance=1,this.distanceAttack=4}}class l{constructor(t){this.characters=t}}function c(t,e,s){const a=[],i=function*(t,e){for(;;)yield new(t[d(0,t.length-1)])(d(1,e))}(t,e);for(;s>0;)a.push(i.next().value),s-=1;return new l(a)}function d(t,e){return Math.floor(Math.random()*(e-t+1)+t)}class m{constructor(t,e){if(!(t instanceof r))throw new Error("character must be instance of Character or its children");if("number"!=typeof e)throw new Error("position must be a number");this.character=t,this.position=e}}class u extends r{constructor(t){super(t,"vampire"),this.attack=25,this.defence=25,this.distance=2,this.distanceAttack=2,this.mob=!0}}class p extends r{constructor(t){super(t,"undead"),this.attack=40,this.defence=10,this.distance=4,this.distanceAttack=1,this.mob=!0}}class g extends r{constructor(t){super(t,"daemon"),this.attack=10,this.defence=40,this.distance=1,this.distanceAttack=4,this.mob=!0}}const y={auto:"auto",pointer:"pointer",crosshair:"crosshair",notallowed:"not-allowed"};class b{#t={step:"player",gameOver:!1,score:0,round:1};from(t){return this.#t=t,null}getState(){return this.#t}}const v=new a;v.bindToDOM(document.querySelector("#game-container"));const C=new class{constructor(t){this.storage=t}save(t){this.storage.setItem("state",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(t){throw new Error("Invalid state")}}}(localStorage),f=new class{constructor(t,e){this.gamePlay=t,this.stateService=e,this.positions=[],this.classesPlayer=["bowman","swordsman","magician"],this.selectChar=null,this.gameState=new b,this.state=this.gameState.getState()}init(t=null){this.gamePlay.drawUi(i.next(t).value),this.playerTeam=c([o,n,h],2,3),this.mobsTeam=c([u,p,g],2,3),this.renderingTeamInit(),this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this)),this.gamePlay.addNewGameListener(this.onClickNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.onClickSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.onClickLoadGame.bind(this))}onClickLoadGame(){try{const t={swordsman:n,magician:h,bowman:o,daemon:g,undead:p,vampire:u},e=this.stateService.load();this.state={step:e.step,gameOver:e.gameOver,score:e.score,round:e.round},this.playerTeam=new l(e.playerTeam.map((e=>Object.assign(new t[e.type](e.level),e)))),this.mobsTeam=new l(e.mobsTeam.map((e=>Object.assign(new t[e.type](e.level),e)))),this.positions=[],this.gamePlay.drawUi(i.next(e.round-2).value);const s=[];this.playerTeam.characters.concat(this.mobsTeam.characters).forEach((t=>{s.push({character:t,position:t.position}),this.positions.push(t.position)})),this.gamePlay.redrawPositions(s)}catch(t){a.showError(t.message)}}onClickSaveGame(){const t=this.gameState.getState();t.mobsTeam=this.mobsTeam.characters,t.playerTeam=this.playerTeam.characters,this.stateService.save(t)}onClickNewGame(){this.state={step:"player",gameOver:!1,score:this.state.score,round:1},this.gameState.from(this.state),this.positions=[],this.init(this.state.round-2)}onCellClick(t){this.state.gameOver||("mobs"!==this.state.step?this.checkPositionPlayer(t)?(this.playerTeam.characters.forEach((t=>{this.gamePlay.deselectCell(t.position)})),this.gamePlay.selectCell(t)):this.selectChar?e(t,this.selectChar.position,this.selectChar.distance,this.gamePlay.boardSize)&&!this.positions.includes(t)?(this.movingCharacter(t),this.ai()):this.positions.includes(t)&&this.attackCharacter(t):a.showError("Вы выбираете не своего персонажа."):a.showError("Сейчас ход противника."))}attackCharacter(t){const e=this.getCharacterByPosition(t),s=Math.max(this.selectChar.attack-e.defence,.1*this.selectChar.attack);e.health-=s,this.gamePlay.showDamage(t,s).then((()=>{this.checkDeath(e,"mobs"),this.gamePlay.deselectCell(this.selectChar.position),this.selectChar=null,this.state.gameOver?a.showError("Поздравляем, Вы победили! Выш счет: "+this.state.score):(this.saveStatus("step","mobs"),this.ai())}))}saveStatus(t,e){this.state[t]=e,this.gameState.from(this.state)}getNewPositions(){const t=[];return this.playerTeam.characters.forEach((e=>t.push(new m(e,e.position)))),this.mobsTeam.characters.forEach((e=>t.push(new m(e,e.position)))),t}movingCharacter(t){const e=this.selectChar.position;this.selectChar.position=t,this.positions=this.positions.map((s=>s===e?t:s)),this.selectChar.radiusAttack=s(t,this.selectChar.distanceAttack),this.selectChar.position=t,this.gamePlay.deselectCell(e),this.gamePlay.deselectCell(t);const a=this.getNewPositions();this.gamePlay.redrawPositions(a),this.selectChar=null,this.saveStatus("step","mobs")}onCellEnter(t){if(this.state.gameOver)return;let s="auto";if(this.positions.includes(t)){const e=this.getCharacterByPosition(t);e&&this.gamePlay.showCellTooltip(function(t){return`🎖${t.level} ⚔${t.attack} 🛡${t.defence} ❤${t.health}`}(e),t),this.selectChar?this.checkAttack(t)&&(this.gamePlay.selectCell(t,"red"),this.gamePlay.setCursor(y.crosshair)):(s=this.isCharacterPlayer(e)?"pointer":"notallowed",this.gamePlay.setCursor(y[s]))}else this.selectChar&&e(t,this.selectChar.position,this.selectChar.distance,this.gamePlay.boardSize)&&(this.gamePlay.selectCell(t,"green"),this.gamePlay.setCursor(y.pointer))}checkAttack(t){const e=[];return this.mobsTeam.characters.forEach((t=>e.push(t.position))),this.selectChar.radiusAttack.includes(t)&&e.includes(t)}onCellLeave(t){this.state.gameOver||(this.positions.includes(t)?(this.gamePlay.hideCellTooltip(t),this.gamePlay.setCursor(y.auto),Object.hasOwn(this.getCharacterByPosition(t),"mob")&&this.gamePlay.deselectCell(t)):(this.gamePlay.deselectCell(t),this.gamePlay.setCursor(y.auto)))}renderingTeamInit(t=!1){const e=function(t){const e={player:[],mobs:[]};let s=0;for(let a=0;a<t;a+=1)s=t*a,e.player.push(s),e.player.push(s+1),e.mobs.push(s+t-1),e.mobs.push(s+t-2);return e}(this.gamePlay.boardSize),s=this.renderingTeam(e,"mobs");let a;a=t?[...s]:[...this.renderingTeam(e,"player"),...s],this.gamePlay.redrawPositions(a)}renderingTeam(t,e){const a=[];return("mobs"===e?this.mobsTeam.characters:this.playerTeam.characters).forEach((i=>{let r;do{r=d(0,t[e].length-1)}while(this.positions.includes(t[e][r]));i.position=t[e][r],i.radiusAttack=s(i.position,i.distanceAttack),this.positions.push(i.position),a.push(new m(i,t[e][r])),t[e].splice(r,1)})),a}getCharacterByPosition(t){const e=this.playerTeam.characters.concat(this.mobsTeam.characters);for(let s=0;s<e.length;s+=1)if(e[s].position===t)return e[s]}checkPositionPlayer(t){if(this.positions.includes(t)){const e=this.getCharacterByPosition(t),s=this.isCharacterPlayer(e);return s&&(this.selectChar=e),s}return!1}isCharacterPlayer(t){return this.classesPlayer.includes(t.type)}ai(){if("mobs"!==this.state.step)return;if(this.mobsTeam.characters.length<1)return;const t=this.aiSelect();"attack"===t.action?this.attackAi(t):"move"===t.action&&this.movingAi(t)}aiSelect(){let t=null;return this.mobsTeam.characters.forEach(((e,s)=>{t||this.playerTeam.characters.forEach(((a,i)=>{if(e.radiusAttack.includes(a.position))return t={action:"attack",mob:this.mobsTeam.characters[s],player:this.playerTeam.characters[i]},!1}))})),t||(t={action:"move",mob:0,player:0},this.mobsTeam.characters.forEach(((e,s)=>{this.playerTeam.characters.forEach(((a,i)=>{Math.abs(e.position-a.position)<Math.abs(this.mobsTeam.characters[t.mob].position-this.playerTeam.characters[t.player].position)&&(t.mob=s,t.player=i)}))})),t.mob=this.mobsTeam.characters[t.mob],t.player=this.playerTeam.characters[t.player]),t}attackAi(t){const{mob:e,player:s}=t,i=Math.max(e.attack-s.defence,.1*e.attack);s.health-=i,this.gamePlay.showDamage(s.position,i).then((()=>{this.checkDeath(s,"player"),this.saveStatus("step","player"),this.state.gameOver&&a.showError("Игра окончена. Вы проиграли. Выш счет: "+this.state.score)}))}movingAi(t){const{mob:e,player:a}=t;let i=null;e.movingPositions=this.setAiPositionsMoving(e),e.movingPositions.forEach((t=>{(null===i||Math.abs(t-a.position)<Math.abs(i-a.position)&&!this.positions.includes(t))&&(i=t)})),this.positions=this.positions.map((t=>t===e.position?i:t)),e.radiusAttack=s(i,e.distanceAttack),e.position=i;const r=this.getNewPositions();this.gamePlay.redrawPositions(r),this.saveStatus("step","player")}setAiPositionsMoving(t){const e=[],s=this.getMinMaxPosRow(t.position),a=this.gamePlay.boardSize*this.gamePlay.boardSize-1;for(let a=1;a<=t.distance;a+=1){const i=t.position+a;i<=s.max&&e.push(i)}for(let a=1;a<=t.distance;a+=1){const i=t.position-a;i>=s.min&&e.push(i)}for(let s=1;s<=t.distance;s+=1){const i=t.position+s*this.gamePlay.boardSize;i<=a&&e.push(i)}for(let s=1;s<=t.distance;s+=1){const a=t.position-s*this.gamePlay.boardSize;a>=0&&e.push(a)}for(let i=1;i<=t.distance;i+=1){const r=t.position+i+i*this.gamePlay.boardSize;r<=a&&r<=s.max+i*this.gamePlay.boardSize-1&&e.push(r)}for(let i=1;i<=t.distance;i+=1){const r=t.position-i+i*this.gamePlay.boardSize;r<=a&&r>=s.min+i*this.gamePlay.boardSize&&e.push(r)}for(let a=1;a<=t.distance;a+=1){const i=t.position+a-a*this.gamePlay.boardSize;i>=0&&i<=s.max-a*this.gamePlay.boardSize-1&&e.push(i)}for(let a=1;a<=t.distance;a+=1){const i=t.position-a-a*this.gamePlay.boardSize;i>=0&&i>=s.min-a*this.gamePlay.boardSize&&e.push(i)}return e}getMinMaxPosRow(t){return{min:Math.floor(t/this.gamePlay.boardSize)*this.gamePlay.boardSize,max:(Math.floor(t/this.gamePlay.boardSize)+1)*this.gamePlay.boardSize-1}}checkDeath(t,e){t.health<1&&(this.positions=this.positions.filter((e=>e!==t.position)),this[e+"Team"].characters=this[e+"Team"].characters.filter((e=>e!==t)),0===this.mobsTeam.characters.length&&this.roundComplete(),0===this.playerTeam.characters.length&&this.saveStatus("gameOver",!0));const s=this.getNewPositions();this.gamePlay.redrawPositions(s)}roundComplete(){const t=this.state.round+1;if(t>4)this.saveStatus("gameOver",!0);else{this.saveStatus("step","player"),this.saveStatus("score",this.state.score+1),this.saveStatus("round",t);let e=1;this.playerTeam.characters.forEach((t=>{this.levelUp(t),e<t.level&&(e=t.level)})),this.gamePlay.drawUi(i.next().value),this.mobsTeam=c([u,p,g],e,3),this.mobsTeam.characters.forEach((t=>{for(let e=1;e<=t.level;e+=1)this.levelUp(t,!1)})),this.renderingTeamInit(!0)}}levelUp(t,e=!0){e&&(t.level+=1),t.attack=this.upStat(t.health,t.attack),t.defence=this.upStat(t.health,t.defence),t.health=this.upHealth(t.health)}upHealth(t){return(t+=80)>100?100:t}upStat(t,e){return t>1?Math.max(e,e*(80+t)/100):e}}(v,C);f.init()})();